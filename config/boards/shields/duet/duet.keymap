/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define QWERTY 0
#define EU 1
#define NAV 2
#define NUM 3
#define SYM 4
#define FUNC 5
#define SYS 6

#define KEYS_L 0 1 2 3 8 9 10 11 12 13 20 21 22 23 24 // left-hand keys
#define KEYS_R 4 5 6 7 14 15 16 17 18 19 25 26 27 28 29 // right-hand keys
#define THUMBS 30 31 32 33 34 35 

&lt {
    tapping-term-ms = <150>;
};

&mt {
    tapping-term-ms = <150>;
};

&encoder {
    status = "okay";
};

/ {
    behaviors {
        hsl: homerow_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hsr: homerow_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hcl: homerow_ctrl_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hcr: homerow_ctrl_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        hml: homerow_mods_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr: homerow_mods_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    macros {
        m_email: m_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp Z  &kp E &kp N &kp E &kp G &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };

        m_arrow: m_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };

        m_sl: m_select_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp HOME> 
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp END>
                , <&macro_release &kp LSHFT>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <14 17>;
            bindings = <&caps_word>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";

            bindings = <
                                        &kp W        &kp E         &kp R         &kp T            &kp Y      &kp U         &kp I         &kp O
                &kp Q      &hml LGUI A  &hml LALT S  &hcl LCTRL D  &hsl LSHFT F  &kp G            &kp H      &hsr RSHFT J  &hcr RCTRL K  &hmr LALT L  &hmr RGUI P  &kp SEMI
                           &kp Z        &kp X        &kp C         &kp V         &kp B            &kp N      &kp M         &kp COMMA     &kp DOT      &kp SLASH
                                                 &lt FUNC ESC  &lt NUM SPACE  &lt SYM TAB       &lt SYM ENTER  &lt NAV BSPC  &lt EU DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        eu_layer {
            display-name = "EU";

            bindings = <
                                       &trans      &kp RA(E)    &trans       &trans            &trans       &kp RA(U)    &trans      &kp RA(O)
                &trans    &kp RA(A)    &kp RA(S)   &trans       &kp LSHFT    &trans            &trans       &kp RSHFT    &trans      &kp RA(L)    &trans       &trans
                          &kp RA(Z)    &kp RA(X)   &kp RA(C)    &trans       &trans            &kp RA(N)    &trans       &trans      &trans       &trans
                                                           &trans   &trans     &trans       &trans      &trans     &trans
            >;
        };

        nav_layer {
            display-name = "NAV";

            bindings = <
                                   &kp LC(Z)  &kp LC(Y)    &kp LC(GRAVE)  &none          &none         &kp INS    &kp PG_DN    &kp PG_UP
                &none    &kp LGUI  &kp LALT   &kp LCTRL    &kp LSHFT      &none          &kp LA(UP)    &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT    &none
                         &none     &none      &kp LS(END)  &kp LS(HOME)   &none          &kp LA(DOWN)  &kp HOME   &kp END      &none        &none
                                                      &trans     &trans     &trans        &trans      &trans     &trans
            >;
        };

        num_layer {
            display-name = "NUM";

            bindings = <
                                       &kp N7      &kp N8      &kp N9      &kp COMMA          &none     &kp TILDE    &kp UNDER    &kp DQT
                &kp MINUS   &kp N0     &kp N4      &kp N5      &kp N6      &kp DOT            &none     &kp GRAVE    &kp MINUS    &kp SQT    &m_email     &none
                            &none      &kp N1      &kp N2      &kp N3      &kp BSPC           &none     &m_arrow     &m_sl        &none      &none
                                                      &kp ENTER     &trans     &trans       &trans      &trans     &trans
            >;
        };

        sym_layer {
            display-name = "SYM";

            bindings = <
                                     &kp PRCNT   &kp PLUS    &kp LBRC    &none           &none    &kp RBRC    &kp AT      &kp DLLR
                &none    &kp BSLH    &kp EXCL    &kp EQUAL   &kp LPAR    &none           &none    &kp RPAR    &kp PIPE    &kp AMPS     &kp HASH    &none
                         &none       &none       &kp STAR    &kp LBKT    &kp DEL         &none    &kp RBKT    &kp CARET   &none        &none
                                                     &trans     &trans     &trans       &trans      &trans     &mo SYS
            >;
        };

        func_layer {
            display-name = "FUNC";

            bindings = <
                                     &kp F7      &kp F8      &kp F9      &kp F11             &none        &kp PSCRN    &kp SLCK     &kp PAUSE_BREAK
                &none    &kp LCTRL   &kp F4      &kp F5      &kp F6      &kp F12             &none        &kp RSHFT    &kp RCTRL    &kp LALT         &kp RGUI    &none
                         &none       &kp F1      &kp F2      &kp F3      &kp F10             &none        &kp CAPS     &kp KP_NUM   &none            &none
                                                    &trans     &kp C_NEXT     &kp C_PP       &trans      &trans     &trans
            >;
        };

        sys_layer {
            display-name = "SYS";

            bindings = <
                                    &none     &none     &none     &none           &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                &none     &none     &none     &none     &none     &none           &ext_power EP_ON   &out OUT_BLE  &none         &none         &none          &bt BT_CLR
                          &none     &none     &none     &none     &none           &ext_power EP_OFF  &out OUT_USB  &none         &none         &none
                                                &none     &none     &none       &trans      &bootloader     &trans
            >;
        };

    };
};